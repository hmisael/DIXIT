plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 32
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.dixit_app"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"
        //multiDexEnabled = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures{
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {

        coreLibraryDesugaringEnabled = true

        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {
    implementation 'androidx.wear:wear:1.0.0'
    compileOnly 'com.google.android.wearable:wearable:2.6.0'
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")

    implementation 'androidx.core:core-ktx:1.8.0'

    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    def nav_version = "2.5.2"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    //Para safeargs
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    //testImplementation 'junit:junit:4.13.2'
    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    def lifecycle_version = "2.5.1"
    def arch_version = "2.1.0"

    // ViewModel
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version")

    // LiveData
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version")
    // Lifecycles (con ViewModel o LiveData)
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version")

    // Saved state (ViewwModel)
    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")

    // Annotation processor
    kapt("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation("androidx.lifecycle:lifecycle-common-java8:$lifecycle_version")

    // optional - helpers for implementing LifecycleOwner in a Service
    implementation("androidx.lifecycle:lifecycle-service:$lifecycle_version")

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    implementation("androidx.lifecycle:lifecycle-process:$lifecycle_version")

    // optional - ReactiveStreams support for LiveData
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version")

    // optional - Test helpers for LiveData
    testImplementation("androidx.arch.core:core-testing:$arch_version")

    // optional - Test helpers for Lifecycle runtime
    testImplementation ("androidx.lifecycle:lifecycle-runtime-testing:$lifecycle_version")

    // Room
    implementation "androidx.room:room-runtime:2.5.0-alpha02"
    kapt 'androidx.room:room-compiler:2.5.0-alpha02'

    // Kotlin Extensions y Coroutines (Room)
    implementation 'androidx.room:room-ktx:2.5.0-alpha02'

    // Espresso
    def androidx_test_espresso = "3.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:3.4.0"

    // Mockk.io
    def mockk_version = "1.9.3"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"


    def androidx_test = "1.1.2"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:core:1.4.0"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.1.3"
    androidTestImplementation "androidx.room:room-testing:2.4.2"

    //Fragment
    implementation 'androidx.fragment:fragment-ktx:1.4.1'
    debugImplementation 'androidx.fragment:fragment-testing:1.4.1'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'

    //Cardview
    implementation "androidx.cardview:cardview:1.0.0"

    implementation "androidx.recyclerview:recyclerview:1.2.1"

    implementation 'com.google.code.gson:gson:2.6.2'

}